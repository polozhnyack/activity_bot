from aiogram_dialog import Dialog, Window
from aiogram_dialog.widgets.text import Const, Format
from aiogram_dialog.widgets.kbd import Column, Button, Url, Row, Select, Group, PrevPage, NextPage, ScrollingGroup, Radio
from aiogram_dialog.widgets.media import StaticMedia, MediaScroll, DynamicMedia
from aiogram_dialog.widgets.input import MessageInput
from aiogram.types import ContentType

from dialogs.states import DirectorState
from .handlers import *
from .getter import *
from config import load_config
from dialogs.trainer.getter import get_childs_btn, months_getter, get_childs_in_review_btn, get_exercise_btn

import operator

config = load_config()

products_scroller = ScrollingGroup(
    Select(
        Format("{item.full_name}"),
        id="child",
        item_id_getter=lambda p: f"code_{p.code}",
        items="childs",
        on_click=child_selected_card
    ),
    id="products_scroller",
    width=1,
    height=10,
    hide_on_single_page=True,
    hide_pager=True,
)

months_select = Group(
    Select(
        Format("{item}"),
        id="s_months",
        item_id_getter=lambda x: x,
        items="months",
        on_click=on_month_selected
    ),
    width=4
)


prod_scroller = ScrollingGroup(
    Select(
        Format("{item.full_name}"),
        id="child",
        item_id_getter=lambda p: f"code_{p.code}",
        items="childs",
        on_click=child_selected
    ),
    id="products_scroller",
    width=1,
    height=10,
    hide_on_single_page=True,
    hide_pager=True,
)

director_dialog = Dialog(
    Window(
        Const(
            "<b>üë®‚Äçüíº –†–æ–ª—å: –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä</b>\n\n"
            "–í—ã –º–æ–∂–µ—Ç–µ:\n"
            "‚Ä¢ –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –≤—Å–µ –æ—Ç—á—ë—Ç—ã –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–µ;\n"
            "‚Ä¢ –≤–∏–¥–µ—Ç—å —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å —Ä–µ–±—ë–Ω–∫–∞;\n"
            "‚Ä¢ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ;\n"
            "‚Ä¢ —É—Ç–≤–µ—Ä–∂–¥–∞—Ç—å –æ—Ç—á—ë—Ç—ã (—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è PDF –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Ä–æ–¥–∏—Ç–µ–ª—é);\n"
            "‚Ä¢ –æ—Ç–∫–ª–æ–Ω—è—Ç—å –æ—Ç—á—ë—Ç—ã, –æ—Ç–ø—Ä–∞–≤–ª—è—è –∏—Ö —Ç—Ä–µ–Ω–µ—Ä—É –Ω–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É."
        ),
        Button(
            text=Const("üìä –¢–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ"), 
            id="start", 
            on_click=lambda c, b, m: m.start(state=TrainerStates.select_month)
        ),
        Button(
            text=Format("üìù –ñ–¥—É—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏: {count_in_review}"),
            id="In_review",
            when=lambda data, *args: int(data.get("count_in_review", 0)) > 0,
            on_click=lambda c, b, m: m.switch_to(state=DirectorState.reports_child)
        ),
        Button(
            text=Const("üìú –°–º–æ—Ç—Ä–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é"),
            id="history",
            on_click=lambda c, b, m: m.start(state=ProgressHistory.history_menu)
        ),
        state=DirectorState.director_menu,
        getter=get_count_in_review
    ),
    Window(
        Const("üë∂üìä –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–±—ë–Ω–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç—á—ë—Ç–∞"),
        prod_scroller,
        Row(
            PrevPage(scroll=prod_scroller, text=Format("‚óÄÔ∏è")),
            NextPage(scroll=prod_scroller, text=Format("‚ñ∂Ô∏è"))
        ),
        Button(
            text=Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
            id="back_menu",
            on_click=lambda c, b, m: m.back()
        ),
        state=DirectorState.reports_child,
        getter=get_childs_in_review_btn
    ),
    Window(
        Format(
            "üìë <b>–û—Ç—á—ë—Ç –∑–∞ {date}</b>\n\n"
            "üë∂ <b>–§–ò–û:</b> {full_name}\n"
            "üéÇ <b>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è:</b> {birth_day}\n"
            "üÜî <b>–ö–æ–¥ —Ä–µ–±—ë–Ω–∫–∞:</b> {child_code}\n\n"
            "üèãÔ∏è <b>–¢—Ä–µ–Ω–µ—Ä:</b> {trainer_username}\n"
            "üë®‚Äçüë©‚Äçüëß <b>–†–æ–¥–∏—Ç–µ–ª—å:</b> {parent_username}\n\n"
            "üìÖ <b>–ü–ª–∞–Ω –Ω–∞ –º–µ—Å—è—Ü</b> \n\n{month_plan}"
        ),
        months_select,
        Button(
            text=Const("üîç –°–º–æ—Ç—Ä–µ—Ç—å –æ—Ç—á—ë—Ç"),
            id="check_report",
            when=lambda data, widget, manager: data.get("count_rows", 0) > 0,
            on_click=lambda c, b, m: m.switch_to(state=DirectorState.select_elements_in_review)
        ),
        Row(
            Button(
                text=Const("‚úÖ –£—Ç–≤–µ—Ä–¥–∏—Ç—å"),
                id="approve",
                on_click=lambda c, b, m: m.switch_to(state=DirectorState.agree_to_approve_report)
            ),
            Button(
                text=Const("‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å"),
                id="reject",
                on_click=lambda c, b, m: m.switch_to(state=DirectorState.reject_report)
            ),
        ),
        Button(
            text=Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
            id="back"
        ),
        state=DirectorState.report,
        getter=get_report_card,
    ),
    Window(
        Const("–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç"),
        Group(
            Select(
                Format("{item[name]}"),
                id="exercise_select",
                items="exercises",
                item_id_getter=lambda x: x["id"],
                on_click=on_exercise_selected,
            ),
            width=1
        ),
        Button(
            text=Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
            id="back_menu",
            on_click=lambda c, b, m: m.back()
        ),
        state=DirectorState.select_elements_in_review,
        getter=get_exercise_btn
    ),
    Window(
        Format("{text}"),
        DynamicMedia("photo"),
        Row(
            Button(text=Const("‚óÄÔ∏è"), id="prev", on_click=prev_history, when=lambda data, widget, manager: data.get("text") != "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"),
            Button(text=Const("‚ñ∂Ô∏è"), id="next", on_click=next_history, when=lambda data, widget, manager: data.get("text") != "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"),
        ),
        Button(
            text=Const("‚¨ÖÔ∏è –ù–∞–∑–∞–¥"),
            id="back_menu",
            on_click=lambda c, b, m: m.switch_to(state=DirectorState.select_elements_in_review)
        ),
        state=DirectorState.history_progress,
        getter=get_current_history_item
    ),
    Window(
        Const(
            "<b>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –£–¢–í–ï–†–î–ò–¢–¨ —ç—Ç–æ—Ç –æ—Ç—á—ë—Ç?</b>\n\n"
            "–ü–æ—Å–ª–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:\n"
            "‚Ä¢ –æ—Ç—á—ë—Ç –±—É–¥–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –≤ PDF —Ñ–æ—Ä–º–∞—Ç–µ;\n"
            "‚Ä¢ —Ä–æ–¥–∏—Ç–µ–ª—é –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–∞–π–ª–æ–º.\n"
        ),
        Row(
            Button(
                text=Const("‚úÖ –î–∞"),
                id="yes_approve",
                on_click=approve_report
            ),
            Button(
                text=Const("‚ùå –ù–µ—Ç"),
                id="no_approve",
                on_click=lambda c, b, m: m.switch_to(state=DirectorState.report)
            ),
        ),
        state=DirectorState.agree_to_approve_report
    ),
    Window(
        Const(
            "<b>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –û–¢–ö–õ–û–ù–ò–¢–¨ —ç—Ç–æ—Ç –æ—Ç—á—ë—Ç?</b>\n\n"
            "–ü–æ—Å–ª–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è:\n"
            "‚Ä¢ –æ—Ç—á—ë—Ç –≤–µ—Ä–Ω—ë—Ç—Å—è –≤ —Å—Ç–∞—Ç—É—Å ¬´–°–æ–∑–¥–∞–Ω¬ª;\n"
            "‚Ä¢ —Ç—Ä–µ–Ω–µ—Ä—É –ø—Ä–∏–¥—ë—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –æ—Ç—á—ë—Ç –∑–∞ –º–µ—Å—è—Ü –æ—Ç–∫–ª–æ–Ω—ë–Ω.\n"
        ),
        Row(
            Button(
                text=Const("‚úÖ –î–∞"),
                id="yes_approve",
                on_click=approve_report
            ),
            Button(
                text=Const("‚ùå –ù–µ—Ç"),
                id="no_approve",
                on_click=lambda c, b, m: m.switch_to(state=DirectorState.report)
            ),
        ),
        state=DirectorState.reject_report
    )
)